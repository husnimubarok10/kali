#!/system/bin/sh


######### IMPORT BOOTKALI ENVIRONMENT #########
# Fallback untuk readlink -f (karena di beberapa Android readlink gak punya -f)
_resolve_path() {
  if command -v readlink >/dev/null 2>&1 && readlink -f "$1" >/dev/null 2>&1; then
    readlink -f "$1"
  elif command -v realpath >/dev/null 2>&1; then
    realpath "$1"
  else
    # fallback: cd ke dir dan pwd -P
    _oldpwd=$(pwd 2>/dev/null)
    cd "$(dirname "$1")" 2>/dev/null || true
    _base=$(basename "$1")
    printf "%s/%s\n" "$(pwd -P 2>/dev/null || pwd)" "$_base"
    [ -n "$_oldpwd" ] && cd "$_oldpwd" 2>/dev/null || true
  fi
}

SCRIPT_PATH=$(_resolve_path "$0")
# source file bootkali_init (set env & fungsi)
if [ -f "${SCRIPT_PATH%/*}/bootkali_init" ]; then
. "${SCRIPT_PATH%/*}/bootkali_init"
else
  printf "ERROR: tidak menemukan %s/bootkali_init\n" "${SCRIPT_PATH%/*}" >&2
  exit 1
fi


# Pastikan variabel penting sudah diset oleh bootkali_init
: "${MNT:?}"
: "${BUSYBOX:?}"
: "${CHROOT_EXEC:?}"

# Fungsi help singkat
show_help() {
  printf "bootkali - helper script untuk chroot Kali\n\n"
  printf "Usage: %s [ARGUMENTS]\n" "$0"
  printf "Jika tidak ada argumen -> buka chroot interactive (tmux)\n\n"
  printf "Beberapa ARGUMENTS yang didukung:\n"
  printf "  apache [start|stop]\n"
  printf "  beef-xss [start|stop]\n"
  printf "  dhcp [start|stop]\n"
  printf "  dnsmasq [start|stop]\n"
  printf "  hostapd [start|stop]\n"
  printf "  iptables\n"
  printf "  msf [start|stop]\n"
  printf "  openvpn [start|stop]\n"
  printf "  ssh [start|stop]\n"
  printf "  wifite\n"
  printf "  fruitywifi [start|stop]\n"
  printf "  macchanger_random <iface>\n"
  printf "  macchanger_custom <mac> <iface>\n"
  printf "  macchanger_original <iface>\n"
  printf "  start_gpsd <port>\n"
  printf "  kalimenu\n"
  printf "  ycable [start|stop]\n"
  printf "  custom_cmd <cmd...>\n"
  printf "  dumpmifare\n"
  printf "  apt install <pkg>\n"
  printf "  -h | --help : tampilkan help ini\n"
}

# Jika argumen -h atau --help
if [ "$#" -gt 0 ]; then
  case "$1" in
    -h|--help)
      show_help
      exit 0
      ;;
  esac
fi

# Jika nggak ada argumen, buka chroot interactive (tmux)
if [ $# -eq 0 ]; then
    # Custom initial scripts can be run here after mounting the chroot
    [ ! -f "$MNT/root/.hushlogin" ] && touch "$MNT/root/.hushlogin"
    [ ! -d "$MNT/root/.ssh" ] && mkdir -p "$MNT/root/.ssh"

    # Masuk ke chroot dan attach/create tmux session mysession
    # Pastikan $BUSYBOX, $MNT, $CHROOT_EXEC sudah benar
     echo $MNT
    "$BUSYBOX" chroot "$MNT" "$CHROOT_EXEC" -E PATH="$PATH" su - -c "tmux attach-session -t mysession -c /root \; choose-window ||  tmux new-session -s mysession -c /root \; choose-window"
    exit $?
fi

# Jika ada argumen, proses perintah khusus
# Gunakan = untuk kompatibilitas POSIX sh
if [ "$1" = "apache" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" sudo service apache2 start
fi
if [ "$1" = "apache" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" sudo service apache2 stop
fi

if [ "$1" = "beef-xss" ] && [ "$2" = "start" ]; then
    LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 "$BUSYBOX" chroot "$MNT" sudo service beef-xss start
    sleep 35
    am start -a android.intent.action.VIEW -d "http://127.0.0.1:3000/ui/panel"
fi
if [ "$1" = "beef-xss" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" sudo service beef-xss stop
fi

if [ "$1" = "dhcp" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" sudo service isc-dhcp-server start
fi
if [ "$1" = "dhcp" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" sudo service isc-dhcp-server stop
fi

if [ "$1" = "dnsmasq" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" service dnsmasq start
fi
if [ "$1" = "dnsmasq" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" service dnsmasq stop
fi

if [ "$1" = "hostapd" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" service hostapd start
fi
if [ "$1" = "hostapd" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" service hostapd stop
fi

if [ "$1" = "iptables" ]; then
    "$BUSYBOX" chroot "$MNT" sh /sdcard/nh_files/configs/iptables.conf
fi

if [ "$1" = "msf" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" start-msf.sh
fi
if [ "$1" = "msf" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" stop-msf.sh
fi

if [ "$1" = "openvpn" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" service openvpn start
fi
if [ "$1" = "openvpn" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" service openvpn stop
fi

# HID commands (potong contoh panjang untuk ringkas, sisanya tetap sama)
if [ "$1" = "start-rev-met" ]; then
    "$BUSYBOX" chroot "$MNT" sudo /usr/bin/hid-all.sh start-rev-met "$2" | /system/bin/sh
fi

# ... (biarkan block lain seperti semula) ...

# CUSTOM BUTTONS - jalankan custom command yang digabung dari sisa argumen
if [ "$1" = "custom_cmd" ]; then
    shift
    if [ "$#" -eq 0 ]; then
        printf "custom_cmd butuh argumen perintah untuk dijalankan\n" >&2
    else
        # gunakan semua argumen yang tersisa sebagai 1 command
        commmand="$*"
        LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin "$BUSYBOX" chroot "$MNT" sudo sh -c "$commmand"
    fi
fi

if [ "$1" = "dumpmifare" ]; then
    "$BUSYBOX" chroot "$MNT" /usr/bin/dumpmifare.sh
fi

if [ "$1" = "kalimenu" ]; then
    "$BUSYBOX" chroot "$MNT" sudo /usr/bin/kalimenu
fi

# WIFITE (contoh: pastikan interface di-set)
if [ "$1" = "wifite" ]; then
    "$BUSYBOX" chroot "$MNT" sudo /bin/bash -c "chmod 777 /dev/null"
    ip link set wlan1 up 2>/dev/null || true
    sleep 3
    LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin "$BUSYBOX" chroot "$MNT" sudo /usr/bin/python3 /usr/bin/wifite
fi

# FRUITYWIFI
if [ "$1" = "fruitywifi" ] && [ "$2" = "start" ]; then
    "$BUSYBOX" chroot "$MNT" /etc/init.d/php7-fpm start
    "$BUSYBOX" chroot "$MNT" /etc/init.d/fruitywifi start
    "$BUSYBOX" chroot "$MNT" /etc/init.d/nginx start
    sleep 15
    am start -a android.intent.action.VIEW -d "http://127.0.0.1:8000"
fi
if [ "$1" = "fruitywifi" ] && [ "$2" = "stop" ]; then
    "$BUSYBOX" chroot "$MNT" /etc/init.d/fruitywifi stop
    "$BUSYBOX" chroot "$MNT" /etc/init.d/php7-fpm stop
    "$BUSYBOX" chroot "$MNT" /etc/init.d/nginx stop
fi

# macchanger examples (tetap sama)
if [ "$1" = "macchanger_random" ]; then
    "$BUSYBOX" chroot "$MNT" sudo /usr/bin/macchanger --random "$2"
fi
if [ "$1" = "macchanger_custom" ]; then
    "$BUSYBOX" chroot "$MNT" sudo /usr/bin/macchanger --mac="$2" "$3"
fi
if [ "$1" = "macchanger_original" ]; then
    "$BUSYBOX" chroot "$MNT" sudo /usr/bin/macchanger --permanent "$2"
fi

# GPSD
if [ "$1" = "start_gpsd" ]; then
    killall gpsd 2>/dev/null || true
    sleep 1
    "$BUSYBOX" chroot "$MNT" sudo /usr/sbin/gpsd -n "udp://127.0.0.1:$2"
fi

# APT handling (ringkas)
if [ "$1" = "apt" ] && [ "$2" = "install" ]; then
    printf "Menjalankan apt update & install di chroot\n"
    LANG=C PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin "$BUSYBOX" chroot "$MNT" /usr/bin/apt update
    if [ -n "$3" ]; then
        LANG=C DEBIAN_FRONTEND=noninteractive PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin "$BUSYBOX" chroot "$MNT" /usr/bin/apt -y install "$3"
    fi
    LANG=C DEBIAN_FRONTEND=noninteractive PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin "$BUSYBOX" chroot "$MNT" /usr/bin/apt -y dist-upgrade
    printf "Selesai.\n"
fi

# (Selesaikan sisa blok sesuai kebutuhan)